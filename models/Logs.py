from pydantic import BaseModel, Field


class Log(BaseModel):
    processed: bool = False


class LogCiena6500(Log):
    PRIVAL: str = str()
    VERSION: str = str()
    TIMESTAMP: str = str()
    SOURCE: str = str()
    LEVEL: str = str()
    SITE: str = str()
    SHELF: str = str()
    PIM: str = str()
    RESOURCE: str = str()
    DATE: str = str()
    TIME: str = str()
    YEAR: str = str()
    LOGNAME: str = str()
    LOGEVENT: str = str()
    UID: str = str()
    UPC: str = str()
    PORTTYPE: str = str()
    PORTADDR: str = str()
    STATUS: str = str()
    EVTDESCR: str = str()
    CONDITION_TYPE: str = str()
    SEVERITY: str = str()
    LOCATION: str = str()
    DIRECTION: str = str()
    DESCRIPTION: str = str()
    PORT_MODE: str = str()
    NE_ALARM_ID: str = str()
    MODE: str = str()
    ADDITIONALINFO: str = str()
    WAVELENGTH: str = str()
    SERVICE_AFFECTED: str = 'NSA'
    DBCHGSEQ: str = str()
    USERID: str = str()
    PRIORITY: str = str()
    ED_TELEMETRY: str = str()
    LOSTHRES: str = str()
    TELEPWR: str = str()
    TELEMODE: str = str()
    SIGNALPWR: str = str()
    RXPWR: str = str()
    SPANLOSS: str = str()
    MSG: str = str()


class LogCienaWaveserver(Log):
    TIMESTAMP: str = str()
    SOURCE: str = str()
    WS: str = str()
    PIM: str = str()
    EVENT_TYPE: str = str()
    WOS: str = str()
    TIME_FORMAT: str = str()
    EVENT_ID: str = str()
    EVENT_NAME: str = str()
    EVENT_ORIGIN: str = str()
    MSG_: str = Field(str(), alias='MSG')
    MAC: str = str()
    CHASSIS: str = str()
    IP: str = str()
    USERNAME: str = str()
    PORT: str = str()
    ERTYPE: str = str()
    STATE: str = str()
    ERROR: str = str()
    NUMBERS: str = str()
    SEV: str = str()
    TYPE: str = str()
    TAG: str = str()
    USER: str = str()
    ACTION: str = str()
    NUMBERS: str = str()
    STATE1: str = str()
    STATE2: str = str()
    STATE3: str = str()
    CLIENT: str = str()
    ADDR: str = str()
    REASON: str = str()
    DBCHGSEQ: str = str()
    USERID: str = str()
    PRIORITY: str = str()
    ED_TELEMETRY: str = str()
    LOSTHRES: str = str()
    TELEPWR: str = str()
    TELEMODE: str = str()
    SIGNALPWR: str = str()
    RXPWR: str = str()
    SPANLOSS: str = str()

    @property
    def MSG(self):
        return self.MSG_.strip()
